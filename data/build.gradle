plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.kapt
}

android {
    namespace 'com.backpapp.gvttest.data'
    compileSdk versions.targetSdk

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    kapt {
        correctErrorTypes true
    }
    packagingOptions {
        exclude "META-INF/LICENSE.md"
        exclude "META-INF/LICENSE-notice.md"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        exclude "META-INF/licenses/ASM"
        pickFirst "win32-x86-64/attach_hotspot_windows.dll"
        pickFirst "win32-x86/attach_hotspot_windows.dll"
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    dependencies {
        implementation project(path: ':domain')

        kapt libs.dagger.hilt.compiler
        kapt libs.room.compiler
        coreLibraryDesugaring libs.desugar

        implementation libs.androidx.core
        implementation libs.dagger.hilt
        implementation libs.kotlin.stdlib
        implementation(libs.kotlinx.coroutines.android) {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
        implementation libs.room
        implementation libs.room.ktx
        implementation libs.retrofit
        implementation libs.retrofit.mock

        testImplementation project(path: ':test')
        testImplementation libs.bundles.unit.testing
    }
}